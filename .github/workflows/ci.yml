name: CI

on:
  push:
    branches: [ main, master, '001-initial-plan' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        profile: minimal
        override: true

    - name: Cache cargo registry and target
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          target
        key: ${{ runner.os }}-cargo-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.toolchain }}-

    - name: Install wasm/other (noop)
      run: echo "No additional setup"

    - name: Run fmt check
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: |
        mkdir -p test-logs
        cargo test --all --all-features --locked --color always -- -Z unstable-options --format json > test-logs/results.json || true
        tar -czf test-logs.tar.gz test-logs || true

    - name: Upload test logs
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-${{ matrix.toolchain }}
        path: test-logs.tar.gz

  build-generated:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust (stable)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Build UI with Slint generation
      env:
        SLINT_INCLUDE_GENERATED: 1
      run: |
        # Ensure system deps are present on Ubuntu runners for slint backends
        sudo apt-get update && sudo apt-get install -y libxcb-xinerama0 libxkbcommon-dev || true
        cargo build -p gcodekit_ui --verbose

  device-adapters-websocket:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust (stable)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Run device-adapters tests with websocket feature
      run: |
        # Ensure system deps for websocket backends if needed (best-effort)
        sudo apt-get update && sudo apt-get install -y libssl-dev || true
        cargo test -p gcodekit_device_adapters --features websocket -- --nocapture

  test-websocket-adapters:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Run device-adapters tests with websocket feature
      run: |
        # Run tests for the device-adapters crate with websocket features to
        # validate the tungstenite/tokio-tungstenite integration on CI.
        cargo test -p gcodekit_device_adapters --features websocket -- --nocapture

  handshake-timeout-ci:
    runs-on: ubuntu-latest
    needs: device-adapters-websocket
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust (stable)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Run handshake-timeout integration test (ignored normally)
      run: |
        # This job runs the intentionally-ignored handshake-timeout test
        # to validate the sync websocket handshake guard on CI.
        cargo test --package gcodekit_device_adapters --test handshake_timeout_active --features websocket -- --nocapture || true

